<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <gradient
        android:centerColor="@android:color/holo_blue_light"
        android:centerX="0.1"
        android:centerY="0.1"
        android:endColor="@android:color/white"
        android:gradientRadius="100%"
        android:startColor="@android:color/black"
        android:type="radial" />
</shape>Floating blobsCombining multiple radial gradients using the same overlapping technique as our “vertical rainbow” before, we can end up with this collection of floating blobs. This effect is often hunted for by people looking to create an Instagram style logo, and is very easy to achieve. So long as you know your colours, it’s just a matter of adjusting the radius, x position, and y position until each blob is in the correct place. I used this to answer a question on StackOverflow, and the OP raised a reasonable counterpoint. If you need a particularly complex gradient, you could just try exporting an SVG / PNG. However, with vector graphics sometimes gradients aren’t translated properly, and a PNG will either be too large, or may not scale perfectly to the user’s screen. If possible, creating an image as a gradient drawable will ensure it is perfect!        <?xml version="1.0" encoding="utf-8"?> <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
<item>
    <shape android:layout_height="wrap_content">
        <solid android:color="@android:color/black" />
    </shape>
</item>
<item>
    <shape>
        <gradient
            android:centerX="0.1"
            android:centerY="0.1"
            android:endColor="@android:color/transparent"
            android:gradientRadius="100%"
            android:startColor="@android:color/holo_purple"
            android:type="radial" />
    </shape>
</item>
<item>
    <shape>
        <gradient
            android:centerX="0.8"
            android:centerY="0.5"
            android:endColor="@android:color/transparent"
            android:gradientRadius="70%"
            android:startColor="@android:color/holo_orange_light"
            android:type="radial" />
    </shape>
</item>
<item>
    <shape>
        <gradient
            android:centerX="0.8"
            android:centerY="0.1"
            android:endColor="@android:color/transparent"
            android:gradientRadius="40%"
            android:startColor="@android:color/holo_blue_light"
            android:type="radial" />
    </shape>
</item>
<item>
    <shape>
        <gradient
            android:centerX="0.2"
            android:centerY="0.8"
            android:endColor="@android:color/transparent"
            android:gradientRadius="70%"
            android:startColor="@android:color/holo_green_light"
            android:type="radial" />
    </shape>
</item>
<item>
    <shape>
        <gradient
            android:centerX="0.7"
            android:centerY="0.85"
            android:endColor="@android:color/transparent"
            android:gradientRadius="50%"
            android:startColor="@android:color/holo_red_light"
            android:type="radial" />
    </shape>
</item>
</layer-list>